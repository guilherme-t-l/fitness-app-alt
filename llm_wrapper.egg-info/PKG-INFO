Metadata-Version: 2.4
Name: llm-wrapper
Version: 1.0.0
Summary: A simple, scalable wrapper for Large Language Models
Home-page: https://github.com/yourusername/llm-wrapper
Author: Your Name
Author-email: your.email@example.com
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: anthropic>=0.40.0
Requires-Dist: openai>=1.0.0
Requires-Dist: flask>=2.0.0
Requires-Dist: flask-cors>=3.0.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: supabase>=2.0.0
Provides-Extra: web
Requires-Dist: flask>=2.0.0; extra == "web"
Requires-Dist: flask-cors>=3.0.0; extra == "web"
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: black>=21.0; extra == "dev"
Requires-Dist: flake8>=3.8; extra == "dev"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Nutritionist Co-Pilot App

An AI-powered assistant that helps nutritionists create and modify meal plans through natural conversation. The AI understands nutrition context and can suggest food substitutions while maintaining macro balance.

## How It Works

1. **User chats** with an AI nutritionist in the left panel
2. **AI responds** with both chat messages and meal plan updates
3. **Meal plan panel** on the right updates automatically
4. **AI can suggest** food substitutions, dietary adjustments, and macro modifications

## Project Structure

```
fitness-app-alt/
â”œâ”€â”€ web/                           # Main application
â”‚   â”œâ”€â”€ app.py                    # ðŸ”§ Flask server & API endpoints
â”‚   â”œâ”€â”€ nutritionist_system_prompt.txt  # ðŸ”§ AI personality/instructions
â”‚   â””â”€â”€ templates/
â”‚       â””â”€â”€ index.html            # ðŸ”§ Frontend UI (chat + meal plan panels)
â”œâ”€â”€ llm_wrapper/                   # AI provider abstraction
â”‚   â”œâ”€â”€ core.py                   # ðŸ”§ Main AI wrapper logic
â”‚   â”œâ”€â”€ config.py                 # ðŸ”§ Configuration management
â”‚   â””â”€â”€ providers/                # ðŸ”§ AI providers (OpenAI, Anthropic)
â”œâ”€â”€ requirements.txt              # Python dependencies
â””â”€â”€ deploy.sh                     # Deployment script
```

## Key Files to Edit for Development

### **Frontend Changes**
- `web/templates/index.html` - UI layout, styling, chat interface

### **Backend Changes**
- `web/app.py` - API endpoints, meal plan logic, chat handling
- `web/nutritionist_system_prompt.txt` - AI behavior and responses

### **AI Provider Changes**
- `llm_wrapper/core.py` - Main AI wrapper functionality
- `llm_wrapper/providers/` - Add new AI providers or modify existing ones

## Quick Start

1. **Install dependencies:**
   ```bash
   pip install -r requirements.txt
   ```

2. **Set API key:**
   ```bash
   export ANTHROPIC_API_KEY="your-api-key-here"
   ```

3. **Run the app:**
   ```bash
   python web/app.py
   ```

4. **Open browser:** `http://localhost:5000`

## Example Usage

- **"Replace chicken with a vegetarian option"** â†’ AI suggests tofu/tempeh + updates meal plan
- **"Make this dairy-free"** â†’ AI identifies dairy items and suggests alternatives
- **"Increase protein for muscle building"** â†’ AI recommends protein-rich additions
